{"version":3,"sources":["component/ContactForm/ContactFormStyled.js","component/Notification/NotificationStyled.js","component/Notification/Notification.jsx","redux/actions/contactActions.js","component/ContactForm/ContactForm.jsx","component/ContactListItem/ContactListItem.jsx","component/ContactList/ContactListStyled.js","component/ContactList/ContactList.jsx","component/Filter/FilterStyled.js","component/Filter/Filter.jsx","component/App/AppStyled.js","component/App/App.jsx","redux/reducers/contactReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Wrapper","styled","div","NotificationStyled","Notification","notification","className","addNewContact","createAction","data","payload","id","uuidv4","deleteContact","setFilter","getContacts","initialState","name","number","connect","state","contacts","dispatch","addContact","useState","setState","setNotification","showNotification","setShowNotification","onHandleChange","event","target","value","prev","showNotificationAlert","setTimeout","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","preventDefault","some","item","length","type","onChange","filter","toLowerCase","includes","contact","data-id","onClick","dataset","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","ContactListStyled","TransitionGroup","component","map","FilterStyled","Wraper","AppStyled","appear","contactReducer","createReducer","action","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7af69fa0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.title-form\r\n{\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    margin-bottom: 20px;\r\n}\r\n.input-form{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 10px 15px;\r\n    margin-top: 5px;\r\n}\r\n.button{\r\ndisplay: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 100px;\r\n    padding: 7px 10px;\r\n    background-color: blue;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n}\r\n.button:hover{\r\n    color: #fff;\r\n    background-color: black;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;\r\n\r\nexport default Wrapper;","import styled from \"styled-components\";\r\nconst NotificationStyled = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  right: 45px;\r\n  max-width: 300px;\r\n  background-color: red;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  .notification-title {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nexport default NotificationStyled;","import React from \"react\";\r\nimport NotificationStyled from \"../Notification/NotificationStyled\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  return (\r\n    <NotificationStyled>\r\n      <p className=\"notification-title\">{notification}</p>\r\n    </NotificationStyled>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addNewContact = createAction('@contacts/addNewContact',\r\n   (data) => ({\r\n      payload: {\r\n     ...data, id: uuidv4()\r\n }})\r\n);\r\nexport const deleteContact = createAction('@contacts/deleteContact',\r\n  //(payload) => payload\r\n);\r\nexport const setFilter = createAction('@contacts/setFilter');\r\nexport const getContacts = createAction('@contacts/getContacts');\r\n\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import { ADDNEWCONTACT, DELETENEWCONTACT, GETCONTACTS, SETFILTER } from \"../constans/contactConstans\";\r\n\r\n// export const addNewContact = (data) => {\r\n//     return {\r\n//         type: ADDNEWCONTACT,\r\n//         payload:{ ...data, id: uuidv4()}\r\n//     }\r\n// }\r\n\r\n// export const deleteContact = (id) => {\r\n//     return {\r\n//         type: DELETENEWCONTACT,\r\n//         payload: id\r\n//     }\r\n// }\r\n\r\n// export const setFilter = (value) => {\r\n//     return {\r\n//         type: SETFILTER,\r\n//         payload: value,\r\n//     }\r\n// }\r\n\r\n// export const getContacts = (data) => {\r\n//     return {\r\n//         type: GETCONTACTS,\r\n//         payload: data,\r\n//     }\r\n// }","import React, { useState } from \"react\";\r\nimport ContFormStyled from \"../ContactForm/ContactFormStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Notification from '../Notification/Notification'\r\nimport { addNewContact } from \"../../redux/actions/contactActions\";\r\n\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({contacts, addContact}) => {\r\n  const [state, setState] = useState({...initialState})\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  const  onHandleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((prev) =>({ ...prev, [name]: value }));\r\n  };\r\n\r\nconst showNotificationAlert = (notification) => {\r\n   setNotification(notification);\r\n   setShowNotification(true);\r\n   setTimeout(() => {\r\n     setShowNotification(false);\r\n   }, 2000)\r\n    setTimeout(() => {\r\n     setNotification(\"\");\r\n   }, 2500)\r\n  }\r\n\r\n  \r\n  const onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (contacts.contacts.some((item) => item.name === state.name)) {\r\n      showNotificationAlert(`${state.name} is already in contacts`);\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (contacts.contacts.some((item) => item.number === state.number)) {\r\n      showNotificationAlert(`Contact with number ${state.number} is already in contacts`);\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (!state.name.length) {\r\n      showNotificationAlert(\"Please, enter a name\");\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (!state.number.length) {\r\n      showNotificationAlert(\"Please, enter a number\");\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n\r\n    addContact(state);\r\n\r\n    setState({ ...initialState });\r\n  };\r\n  \r\n  \r\n      return (\r\n        <ContFormStyled>\r\n                 \r\n        <CSSTransition in={showNotification} timeout={250} classNames=\"notification\" unmountOnExit>\r\n          <Notification notification={notification}/>\r\n          </CSSTransition>\r\n          \r\n          <form className=\"contForm\" onSubmit={onHandleSubmit}>\r\n            <label className=\"title-form\">\r\n              Name\r\n              <input type=\"text\" value={state.name} name=\"name\" onChange={onHandleChange} className=\"input-form\" />\r\n            </label>\r\n            <label className=\"title-form\">\r\n              Number\r\n              <input type=\"text\" value={state.number} name=\"number\" onChange={onHandleChange} className=\"input-form\" />\r\n            </label>\r\n            <button type=\"submit\" className=\"button\">\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </ContFormStyled>\r\n      );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: (data) => {\r\n      dispatch(addNewContact(data))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter, deleteContact } from \"../../redux/actions/contactActions\";\r\n\r\nconst ContactListItem = ({ contact, contacts, filter, deleteContact, setFilter}) => {\r\n  const onHandleDelete = (event) => {\r\n    const { id } = event.target.dataset;\r\n    deleteContact(id);\r\n    \r\n     if (contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())).length < 2) {\r\n      setFilter('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <li className=\"contact-list__item\" key={contact.id}>\r\n        <div className=\"contact-list__item-info\">\r\n        <span className=\"contact-list__item-name\">{contact.name}:</span>\r\n        <span className=\"contact-list__item-number\">{contact.number}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          data-id={contact.id}\r\n          onClick={onHandleDelete}\r\n          className=\"contact-list__item-btn\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    \r\n    contacts: state.contacts.contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n    ),\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: id => {\r\n      dispatch(deleteContact(id))\r\n    },\r\n    setFilter: (value) => {\r\n      dispatch(setFilter(value))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.contact{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.contact-list__item {\r\n    display: flex;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n    padding: 10px 15px;\r\n    color: black;\r\n  }\r\n  .contact-list-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .contact-list-item-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .contact-list-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list__item-ifo {\r\n    width: 320px;\r\n  }\r\n  .contact-list__item-name {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-number {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-btn {\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 70px;\r\n    padding: 2px 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    margin-left: 10px;\r\n  }\r\n  .contact-list__item-btn:hover {\r\n    color: #fff;\r\n    background-color: red;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nexport default Wrapper;","import React, {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport ContactListStyled from \"../ContactList/ContactListStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/actions/contactActions\";\r\n\r\n\r\nconst ContactList = ({ contacts, filter, getContacts }) => {\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"contacts\")) {\r\n      getContacts(JSON.parse(localStorage.getItem(\"contacts\")));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n  \r\n  return (\r\n    <ContactListStyled>\r\n      <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n        {contacts\r\n          .filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={250}\r\n              classNames=\"my-contact-list-item\"\r\n            >\r\n              <ContactListItem contact={contact} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    contacts: state.contacts.contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n    ),\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getContacts: (data) => {\r\n      dispatch(getContacts(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContactById: PropTypes.func,\r\n}","import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\nposition: relative;\r\n.filter-title{\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n}\r\n.filter-input{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 5px 15px;\r\n    margin-top: 5px;\r\n}\r\n`;\r\n\r\nexport default Wrapper","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FilterStyled from '../Filter/FilterStyled';\r\nimport { setFilter } from \"../../redux/actions/contactActions\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const onChangeFilter = event => {\r\n    const { value } = event.target;\r\n    setFilter(value)\r\n  }\r\n\r\n  return (\r\n      <FilterStyled>\r\n        <label className=\"filter-title\">\r\n          Find contact by name\r\n          <input type=\"text\" name=\"filter\" value={filter} onChange={onChangeFilter} className=\"filter-input\"\r\n          />\r\n        </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFilter: value => {\r\n      dispatch(setFilter(value))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styled from 'styled-components';\r\n\r\nconst Wraper = styled.div`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  overflow: hidden;\r\n  padding: 50px;\r\n  width: 432px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n.phonebook-appear{\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n}\r\n.phonebook-appear-active{\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms linear;\r\n}\r\n.phbook-title{\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n}\r\n.contacts-title{\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    margin-bottom: 20px;\r\n}\r\n .notification-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  .notification-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .notification-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .notification-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%) translateY(-100%);\r\n  }\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0) translateY(0);\r\n    transition: all 250ms linear;\r\n  }\r\n  .my-filter-exit {\r\n    opacity: 1;\r\n  }\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%) translateY(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n  `;\r\nexport default Wraper;","import React from 'react';\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport AppStyled from '../App/AppStyled';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({contacts}) => {\r\n \r\n    return (\r\n        <AppStyled>\r\n            \r\n        <CSSTransition in={true} timeout={500} appear={true} classNames=\"phonebook\">\r\n            <h2 className=\"phbook-title\">PhoneBook</h2>\r\n        </CSSTransition>\r\n            \r\n            <ContactForm />\r\n            \r\n            <h2 className=\"contacts-title\">Contacts</h2>\r\n            \r\n        <CSSTransition in={contacts.length > 1} timeout={250} appear={true} classNames=\"filter\" unmountOnExit>\r\n            <Filter />\r\n        </CSSTransition>\r\n            \r\n        <ContactList />\r\n      </AppStyled>\r\n    );\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.contacts,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewContact, deleteContact, setFilter, getContacts } from \"../actions/contactActions\";\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    filter: \"\", \r\n}\r\n\r\nconst onAddNewContact = (state, action) => ({\r\n    ...state,\r\n    contacts: [...state.contacts, action.payload]\r\n})\r\n\r\nconst onDeleteContact = (state, action) => ({\r\n    ...state,\r\n    contacts: [...state.contacts.filter(item => item.id !== action.payload)]\r\n})\r\n\r\nconst onSetFilter = (state, action) => ({\r\n    ...state,\r\n    filter: action.payload,\r\n})\r\n\r\nconst onGetContacts = (state, action) => ({\r\n    ...state,\r\n    contacts: [...action.payload]\r\n})\r\n\r\nconst contactReducer = createReducer ({ ...initialState }, {\r\n  \r\n    [addNewContact]: onAddNewContact,\r\n    [deleteContact]: onDeleteContact,\r\n    [setFilter]: onSetFilter,\r\n    [getContacts]: onGetContacts,\r\n\r\n})\r\n\r\nexport default contactReducer;\r\n\r\n//======================\r\n//import {ADDNEWCONTACT, DELETENEWCONTACT, GETCONTACTS, SETFILTER } from \"../constans/contactConstans\";\r\n// const initialState = {\r\n//     contacts: [],\r\n//     filter: \"\", \r\n// }\r\n\r\n// const contactReducer = (state = { ...initialState }, action) => {\r\n//     switch (action.type) {\r\n//         case ADDNEWCONTACT: \r\n//             return{...state, contacts: [...state.contacts, action.payload]};\r\n       \r\n//         case DELETENEWCONTACT:    \r\n//             return {\r\n//                 ...state,\r\n//                 contacts: [\r\n//                 ...state.contacts.filter((contact) => contact.id !== action.payload),]\r\n//             }\r\n//              case SETFILTER:    \r\n//             return {\r\n//                 ...state, filter: action.payload,          \r\n//             }\r\n//             case GETCONTACTS:    \r\n//             return {\r\n//                 ...state,\r\n//                 contacts: [...action.payload],   \r\n//             }\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// export default contactReducer;\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactReducer,\r\n})\r\n\r\nexport default rootReducer;","// import { createStore } from \"redux\";\r\n// import rootReducer from \"./reducers/rootReducer\";\r\n\r\n// const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n// export default store;\r\n//==============\r\n import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\n export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App/App';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}